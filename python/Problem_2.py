#Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
#1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
#By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.


class Problem_2:
  def __init__(self):
    self.result = 0

  def fib(self, n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return self.fib(n - 1) + self.fib(n - 2)

  def solve(self, limit):
    i = 2  # inicio en 2 para que la secuencia fib inicie en 1
    cursor = self.fib(i)
    while cursor < limit:
      if cursor % 2 == 0:
        self.result += cursor
        #print(cursor)
      i += 1
      cursor = self.fib(i)

    return self.result


p = Problem_2()
print(p.solve(4000000))

